# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'


steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleRelease'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.apk'
    apksign: true
    apksignerKeystoreFile: 'production.jks'
    apksignerKeystorePassword: 'test123'
    apksignerKeystoreAlias: 'test'
    apksignerKeyPassword: 'test123'
    apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/apk/release/demo.release.apk
    zipalign: true

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory)
    contents: '**/*.release.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
    overWrite: true
    
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/release/'
    artifactName: 'apks'
    publishLocation: 'container'
    
- task: KryptowireMAST@1
  continueOnError: true
  inputs:
    filepath: '$(Build.SourcesDirectory)/app/build/outputs/apk/release/demo.release.apk'
    apikey: 'Yqsx9T83A5T1vENxaU4n5KGupOSNAOHnLl48'
    platform: 'android'
    resultsDir: '$(Build.ArtifactStagingDirectory)/KryptowireResults'
    maxAnalysisTime: 75
    scoreThreshold: 70
    

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/KryptowireResults'
    artifactName: 'KryptowireResults'
    artifactType: 'container'